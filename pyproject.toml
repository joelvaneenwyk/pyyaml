[build-system]
requires = ["setuptools", "wheel", "Cython"]
build-backend = "setuptools.build_meta"

################################################
[tool.pylint.main]
################################################

init-hook = """
import sys, os;
from pylint.config import find_pylintrc;
cwd_path = os.path.abspath(os.path.dirname(find_pylintrc() or (os.getcwd() + '/')));
sys.path.insert(0, cwd_path)
"""

################################################
[tool.pylint.exceptions]
################################################

# Exceptions that will emit a warning when caught.
overgeneral-exceptions = ["BaseException", "Exception"]

################################################
[tool.pylint.format]
################################################

# Expected format of line ending, e.g. empty (any line ending), LF or CRLF.
# expected-line-ending-format =

# Regexp for a line that is allowed to be longer than the limit.
ignore-long-lines = "^\\s*(# )?<?https?://\\S+>?$"

# Number of spaces of indent required inside a hanging or continued line.
indent-after-paren = 4

# String used as indentation unit. This is usually "    " (4 spaces) or "\t" (1
# tab).
indent-string = "    "

# Maximum number of characters on a single line.
max-line-length = 130

# Maximum number of lines in a module.
max-module-lines = 1000

################################################
[tool.pylint."messages control"]
################################################

disable = [
    # Ignore bad option values because some values are only supported in Python 3 e.g., "consider-using-with"
    "consider-using-f-string",
]

################################################
[tool.isort]
################################################

multi_line_output = 4
lines_after_imports = -1
line_length = 130
force_single_line = false
length_sort = false
from_first = false
force_alphabetical_sort_within_sections = true
src_paths = ["lib/"]

sections = [
    # __future__ imports
    "FUTURE",
    # standard library
    "STDLIB",
    # initialization
    "INIT",
    # local folder
    "LOCALFOLDER",
    # first party libraries
    "FIRSTPARTY",
    # third party libraries
    "THIRDPARTY",
]

known_init = ["__init__"]
known_local_folder = [
    "canonical",
    "conftest",
    "test_appliance",
    "run_all_tests",
]
known_first_party = ["yaml"]
known_third_party = ["pytest"]

################################################
[tool.mypy]
################################################

strict = false
follow_imports = "normal"
pretty = true
show_error_codes = true
mypy_path = ["lib/", "tests/lib/"]
raise_exceptions = true
cache_dir = ".tmp/mypy"

disallow_incomplete_defs = true

warn_redundant_casts = true
warn_return_any = false
warn_unreachable = false

check_untyped_defs = false

exclude = [
    '.yarn|.tox|.tmp|.jython_cache|.mypy_cache|.pytest_cache|.ruff_cache|.tmp|node_modules|build|examples[/\\].*$',
    '__init__\.py$',
    'canonical\.py$',
    'common\.py$',
    'conftest\.py$',
    'constructor\.py$',
    'cyaml\.py$',
    'loader\.py$',
    'reader\.py$',
    'representer\.py$',
    'setup\.py$',
    'test_canonical\.py$',
    'test_constructor\.py$',
    'test_emitter\.py$',
    'test_errors\.py$',
    'test_input_output\.py$',
    'test_mark\.py$',
    'test_multi_constructor\.py$',
    'test_reader\.py$',
    'test_recursive\.py$',
    'test_representer\.py$',
    'test_resolver\.py$',
    'test_sort_keys\.py$',
    'test_structure\.py$',
    'test_tokens\.py$',
    'yaml_tests_ext\.py$',
]

[[tool.mypy.overrides]]
module = "yaml.common.*"
ignore_errors = true

[[tool.mypy.overrides]]
module = "yaml.constructor.*"
ignore_errors = true

[[tool.mypy.overrides]]
module = "yaml.cyaml.*"
ignore_errors = true

[[tool.mypy.overrides]]
module = "yaml.loader.*"
ignore_errors = true

[[tool.mypy.overrides]]
module = "yaml.reader.*"
ignore_errors = true

[[tool.mypy.overrides]]
module = "yaml.representer.*"
ignore_errors = true

[[tool.mypy.overrides]]
module = "setup.*"
ignore_errors = true

[[tool.mypy.overrides]]
module = "canonical.*"
ignore_errors = true

[[tool.mypy.overrides]]
module = "conftest.*"
ignore_errors = true

[[tool.mypy.overrides]]
module = "test_canonical.*"
ignore_errors = true

[[tool.mypy.overrides]]
module = "test_constructor.*"
ignore_errors = true

[[tool.mypy.overrides]]
module = "test_emitter.*"
ignore_errors = true

[[tool.mypy.overrides]]
module = "test_errors.*"
ignore_errors = true

[[tool.mypy.overrides]]
module = "test_input_output.*"
ignore_errors = true

[[tool.mypy.overrides]]
module = "test_mark.*"
ignore_errors = true

[[tool.mypy.overrides]]
module = "test_multi_constructor.*"
ignore_errors = true

[[tool.mypy.overrides]]
module = "test_reader.*"
ignore_errors = true

[[tool.mypy.overrides]]
module = "test_recursive.*"
ignore_errors = true

[[tool.mypy.overrides]]
module = "test_representer.*"
ignore_errors = true

[[tool.mypy.overrides]]
module = "test_resolver.*"
ignore_errors = true

[[tool.mypy.overrides]]
module = "test_sort_keys.*"
ignore_errors = true

[[tool.mypy.overrides]]
module = "test_structure.*"
ignore_errors = true

[[tool.mypy.overrides]]
module = "test_tokens.*"
ignore_errors = true

[[tool.mypy.overrides]]
module = "yaml_tests_ext.*"
ignore_errors = true

################################################
[tool.pyright]
################################################

reportMissingImports = true
reportMissingTypeStubs = true
reportTypeCommentUsage = false
reportUnusedImport = true
extraPaths = ["lib/", "tests/lib/"]
exclude = [
    "**/__pycache__/",
    "**/_test/",
    "**/.git/",
    "**/.jython_cache/",
    "**/.tmp/",
    "**/.mypy_cache/",
    "**/.nox/",
    "**/.pytest_cache/",
    "**/.ruff_cache/",
    "**/.tox/",
    "**/.venv/",
    "**/.yarn/",
    "**/node_modules/",
    "build/",
    "cmake-*/",
    "dist/",
]
ignore = [
    "./examples/yaml-highlight/yaml_hl.py",
    "./lib/yaml/",
    "./packaging/build/smoketest.py",
    "./tests/lib/canonical.py",
    "./tests/lib/test_appliance.py",
    "./tests/lib/test_canonical.py",
    "./tests/lib/test_constructor.py",
    "./tests/lib/test_emitter.py",
    "./tests/lib/test_errors.py",
    "./tests/lib/test_multi_constructor.py",
    "./tests/lib/test_representer.py",
    "./tests/lib/test_resolver.py",
    "./tests/lib/test_sort_keys.py",
    "./tests/lib/test_structure.py",
    "./tests/lib/test_tokens.py",
    "./tests/lib/yaml_tests_ext.py",
    "setup.py",
]


################################################
[tool.pytest.ini_options]
################################################

minversion = "6.0"
addopts = [
    "--capture=tee-sys",
    "--color=yes",
    "--doctest-modules",
    "--doctest-report=ndiff",
    "--showlocals",
    "--verbose",
]
cache_dir = ".tmp/pytest"
log_cli = true
doctest_optionflags = [
    "ELLIPSIS",
    "IGNORE_EXCEPTION_DETAIL",
    "NORMALIZE_WHITESPACE",
]
doctest_encoding = "utf-8"

# Order matters for these
testpaths = ["tests/lib/"]
norecursedirs = [
    ".*",
    "_*",
    "node_modules",
    "tmp*",
    "build",
    "libyaml",
    "dist",
    "examples",
]
